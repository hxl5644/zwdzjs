 OK,这里是完整的植物大战僵尸游戏代码:
```python
import pygame 
from pygame.locals import *
import random

SCREEN_WIDTH = 800
SCREEN_HEIGHT = 600

# 子弹类
class Bullet(pygame.sprite.Sprite):
    def __init__(self, x, y):
        super().__init__()
        self.image = pygame.image.load("bullet.png")
        self.rect = self.image.get_rect()
        self.rect.centerx = x
        self.rect.centery = y
        self.speed = 5

    def move(self):
        self.rect.y -= self.speed

    def is_dead(self):
        return self.rect.y + self.rect.height < 0

# 僵尸类
class Zombie(pygame.sprite.Sprite):  
    def __init__(self):
        super().__init__()
        self.image = pygame.image.load("zombie.png")
        self.rect = self.image.get_rect()
        self.rect.left = random.randint(0, SCREEN_WIDTH - self.rect.width)
        self.rect.top = 0
        self.speed = random.randint(1, 3)
        self.hp = random.randint(1, 3)

    def move(self):
        self.rect.top += self.speed

    def is_attacked(self, bullets):
        for bullet in bullets:
            if pygame.sprite.collide_rect(self, bullet):
                bullets.remove(bullet)
                self.hp -= 1
                if self.hp <= 0:
                    return True
        return False
    
    def is_dead(self):
        return self.rect.top > SCREEN_HEIGHT 

# 植物类    
class Plant(pygame.sprite.Sprite):  
    def __init__(self):
        super().__init__()
        self.image = pygame.image.load("plant.png")
        self.rect = self.image.get_rect()
        self.rect.centerx = SCREEN_WIDTH // 2
        self.rect.bottom = SCREEN_HEIGHT
        self.bullets = pygame.sprite.Group()
        self.last_shot = 0  # 上次开火时间
    
    def shoot(self, zombies):
        now = pygame.time.get_ticks()
        if now - self.last_shot > 1000:  # 每秒发射一次
            bullet = Bullet(self.rect.centerx, self.rect.top)
            self.bullets.add(bullet)
            self.last_shot = now 
            
    def move_bullets(self):
        for bullet in self.bullets:
            bullet.move()
            if bullet.is_dead():
                self.bullets.remove(bullet)  
            
# 游戏主函数            
def main():
    pygame.init()
    screen = pygame.display.set_mode((SCREEN_WIDTH, SCREEN_HEIGHT))  
    
    # 背景音乐
    pygame.mixer.music.load("bg_music.wav")
    pygame.mixer.music.play(-1)
    
    # 创建精灵组
    bullets = pygame.sprite.Group()
    zombies = pygame.sprite.Group()
    plants = pygame.sprite.Group() 
    plants.add(Plant())
    
    # 游戏循环
    running = True 
    while running:
        # 事件处理
        for event in pygame.event.get():
            if event.type == QUIT:
                running = False
        
        # 僵尸移动和攻击
        for zombie in zombies:       
            zombie.move()
            if zombie.is_attacked(plants.bullets):
                zombies.remove(zombie)
            if zombie.is_dead():
                zombies.remove(zombie)  
                
        # 子弹移动和攻击  
        for bullet in bullets:         
            bullet.move()
            for zombie in zombies: 
                if pygame.sprite.collide_rect(zombie, bullet):
                    zombies.remove(zombie)
                    bullets.remove(bullet)  
                    
        # 植物开火     
        for plant in plants:
            plant.shoot(zombies)
            plant.move_bullets() 
                      
        # 绘制背景
        screen.fill((255, 255, 255))  
        
        # 绘制精灵组
        plants.draw(screen)
        bullets.draw(screen)
        zombies.draw(screen) 
        
        # 更新屏幕
        pygame.display.flip()  
        
        # 每秒新增一只僵尸
        zombie_timer = pygame.time.Clock()
        zombie_timer.tick(1)
        zombies.add(Zombie())
        
    pygame.quit()
    
if __name__ == '__main__':
    main
